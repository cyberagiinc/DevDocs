{
  "content": "# Untitled Page\nURL: https://docs.crewai.com/\n\n* [Create Your Own Manager Agent](https://docs.crewai.com/</how-to/custom-manager-agent>)\n  * [Force Tool Output as Result](https://docs.crewai.com/</how-to/force-tool-output-as-result>)\n  * [Replay Tasks from Latest Crew Kickoff](https://docs.crewai.com/</how-to/replay-tasks-from-latest-crew-kickoff>)\n\n**CrewAI is a cutting-edge framework for orchestrating autonomous AI agents.**\n\nCrewAI enables you to create AI teams where each agent has specific roles,\ntools, and goals, working together to accomplish complex tasks.\n\nThink of it as assembling your dream team - each member (agent) brings unique\nskills and expertise, collaborating seamlessly to achieve your objectives.\n\nJust like a company has departments (Sales, Engineering, Marketing) working\ntogether under leadership to achieve business goals, CrewAI helps you create an\norganization of AI agents with specialized roles collaborating to accomplish\ncomplex tasks.\n\n‚Ä¢ Manages AI agent teams‚Ä¢ Oversees workflows‚Ä¢ Ensures collaboration‚Ä¢ Delivers\noutcomes  \n---  \n‚Ä¢ Have specific roles (researcher, writer)‚Ä¢ Use designated tools‚Ä¢ Can delegate\ntasks‚Ä¢ Make autonomous decisions  \n‚Ä¢ Defines collaboration patterns‚Ä¢ Controls task assignments‚Ä¢ Manages\ninteractions‚Ä¢ Ensures efficient execution  \n‚Ä¢ Have clear objectives‚Ä¢ Use specific tools‚Ä¢ Feed into larger process‚Ä¢ Produce\nactionable results  \n### How It All Works Together\n\n  1. work on their specialized tasks\n  2. get completed to achieve the goal\n\nCreate specialized agents with defined roles, expertise, and goals - from\nresearchers to analysts to writers\n\nEquip agents with custom tools and APIs to interact with external services and\ndata sources\n\nAgents work together, sharing insights and coordinating tasks to achieve complex\nobjectives\n\nDefine sequential or parallel workflows, with agents automatically handling task\ndependencies\n\n  * üß† : Agents make intelligent decisions based on their roles and available tools\n  * üìù : Agents communicate and collaborate like human team members\n  * üõ†Ô∏è : Easy to add new tools, roles, and capabilities\n  * üöÄ : Built for reliability and scalability in real-world applications\n\n[Get started with CrewAI in your development\nenvironment.](https://docs.crewai.com/</installation>)[Follow our quickstart\nguide to create your first CrewAI agent and get hands-on\nexperience.](https://docs.crewai.com/</quickstart>)[Connect with other\ndevelopers, get help, and share your CrewAI\nexperiences.](https://docs.crewai.com/<https:/community.crewai.com>)\n\n  * [How It All Works Together](https://docs.crewai.com/<#how-it-all-works-together>)\n\n---\n\n# [Automate marketing strategy creation with\nURL: https://docs.crewai.com/examples/example\n\n[Automate marketing strategy creation with\nCrewAI.](https://docs.crewai.com/examples/<https:/github.com/crewAIInc/crewAI-\nexamples/tree/main/marketing_strategy>)[Create a surprise trip itinerary with\nCrewAI.](https://docs.crewai.com/examples/<https:/github.com/crewAIInc/crewAI-\nexamples/tree/main/surprise_trip>)[Match a profile to jobpositions with\nCrewAI.](https://docs.crewai.com/examples/<https:/github.com/crewAIInc/crewAI-\nexamples/tree/main/match_profile_to_positions>)[Create a job posting with\nCrewAI.](https://docs.crewai.com/examples/<https:/github.com/crewAIInc/crewAI-\nexamples/tree/main/job-posting>)[Create a game with\nCrewAI.](https://docs.crewai.com/examples/<https:/github.com/crewAIInc/crewAI-\nexamples/tree/main/game-builder-crew>)[Find job candidates with\nCrewAI.](https://docs.crewai.com/examples/<https:/github.com/crewAIInc/crewAI-\nexamples/tree/main/recruitment>)\n\n---\n\n# Untitled Page\nURL: https://docs.crewai.com/installation\n\n* [Create Your Own Manager Agent](https://docs.crewai.com/</how-to/custom-manager-agent>)\n  * [Force Tool Output as Result](https://docs.crewai.com/</how-to/force-tool-output-as-result>)\n  * [Replay Tasks from Latest Crew Kickoff](https://docs.crewai.com/</how-to/replay-tasks-from-latest-crew-kickoff>)\n\nCrewAI requires . Here‚Äôs how to check your version:\n\nIf you need to update Python, visit\n\nCrewAI is a flexible and powerful AI framework that enables you to create and\nmanage AI agents, tools, and tasks efficiently. Let‚Äôs get you set up! üöÄ\n\nInstall CrewAI with all recommended tools using either method:\n\nBoth methods install the core package and additional tools needed for most use\ncases.\n\nUpgrade CrewAI (Existing Installations Only)\n\nIf you have an older version of CrewAI installed, you can upgrade it:\n\nIf you see a Poetry-related warning, you‚Äôll need to migrate to our new\ndependency manager:\n\nThis will update your project to use , our new faster dependency manager.\n\nSkip this step if you‚Äôre doing a fresh installation.\n\nYou should see something like:\n\nInstallation successful! You‚Äôre ready to create your first crew.\n\nWe recommend using the YAML Template scaffolding for a structured approach to\ndefining agents and tasks.\n\nRun the CrewAI CLI command:\n\nThis creates a new project with the following structure:\n\n```\n\n```\n\nYour project will contain these essential files:\n\nDefine your AI agents and their roles  \n---  \nSet up agent tasks and workflows  \nStore API keys and environment variables  \nProject entry point and execution flow  \nDirectory for custom agent tools  \nStart by editing and to define your crew‚Äôs behavior. Keep sensitive information\nlike API keys in .\n\n[Follow our quickstart guide to create your first CrewAI agent and get hands-on\nexperience.](https://docs.crewai.com/</quickstart>)[Connect with other\ndevelopers, get help, and share your CrewAI\nexperiences.](https://docs.crewai.com/<https:/community.crewai.com>)\n\n---\n\n# Untitled Page\nURL: https://docs.crewai.com/quickstart\n\n* [Create Your Own Manager Agent](https://docs.crewai.com/</how-to/custom-manager-agent>)\n  * [Force Tool Output as Result](https://docs.crewai.com/</how-to/force-tool-output-as-result>)\n  * [Replay Tasks from Latest Crew Kickoff](https://docs.crewai.com/</how-to/replay-tasks-from-latest-crew-kickoff>)\n\n## Build your first CrewAI Agent\n\nLet‚Äôs create a simple crew that will help us and on the for a given topic or\nsubject.\n\nBefore we proceed, make sure you have and installed. If you haven‚Äôt installed\nthem yet, you can do so by following the .\n\nFollow the steps below to get crewing! üö£‚Äç‚ôÇÔ∏è\n\nCreate a new crew project by running the following command in your terminal.\nThis will create a new directory called with the basic structure for your crew.\n\nYou can also modify the agents as needed to fit your use case or copy and paste\nas is to your project. Any variable interpolated in your and files like will be\nreplaced by the value of the variable in the file.\n\n```\n\n  You're a seasoned researcher with a knack for uncovering the latest\n\n  developments in topic. Known for your ability to find the most relevant\n\n  information and present it in a clear and concise manner.\n\n  Create detailed reports based on topic data analysis and research findings\n\n  You're a meticulous analyst with a keen eye for detail. You're known for\n\n  your ability to turn complex data into clear and concise reports making\n\n  it easy for others to understand and act on the information you provide.\n\n```\n\n```\n\n  Conduct a thorough research about topic\n\n  Make sure you find any interesting and relevant information given\n\n  the current year is 2024.\n\n  A list with 10 bullet points of the most relevant information about topic\n\n  Review the context you got and expand each topic into a full section for a\nreport.\n\n  Make sure the report is detailed and contains any and all relevant\ninformation.\n\n  A fully fledge reports with the mains topics each with a full section of\ninformation.\n\n  Formatted as markdown without '```'\n\n```\n\n```\n\n   output_file # This is the file that will be contain the final report.\n\n   agentsselfagents # Automatically created by the @agent decorator\n\n   tasksselftasks # Automatically created by the @task decorator\n\n```\n\n[Optional] Add before and after crew functions\n\n```\n\n  f\"Before kickoff function with inputs:\n\n   inputs # You can return the inputs or modify them as needed\n\n  f\"After kickoff function with result:\n\n   result # You can return the result or modify it as needed\n\n```\n\nFeel free to pass custom inputs to your crew\n\nFor example, you can pass the input to your crew to customize the research and\nreporting.\n\n```\n\n```\n\nBefore running your crew, make sure you have the following keys set as\nenvironment variables in your file:\n\n  * An (or other LLM API key): \n\nLock and install the dependencies\n\nLock the dependencies and install them by using the CLI command but first,\nnavigate to your project directory:\n\nTo run your crew, execute the following command in the root of your project:\n\nYou should see the output in the console and the file should be created in the\nroot of your project with the final report.\n\nHere‚Äôs an example of what the report should look like:\n\n```\n\n Comprehensive Report on the Rise and Impact of AI Agents in 2024\n\n 1. Introduction to AI Agents\nIn 2024, Artificial Intelligence (AI) agents are at the forefront of innovation\nacross various industries. As intelligent systems that can perform tasks\ntypically requiring human cognition, AI agents are paving the way for\nsignificant advancements in operational efficiency, decision-making, and overall\nproductivity within sectors like Human Resources (HR) and Finance. This report\naims to detail the rise of AI agents, their frameworks, applications, and\npotential implications on the workforce.\n\n 2. Benefits of AI Agents\nAI agents bring numerous advantages that are transforming traditional work\nenvironments. Key benefits include:\n\n : AI agents can carry out repetitive tasks such as data entry, scheduling, and\npayroll processing without human intervention, greatly reducing the time and\nresources spent on these activities.\n\n : By quickly processing large datasets and performing analyses that would take\nhumans significantly longer, AI agents enhance operational efficiency. This\nallows teams to focus on strategic tasks that require higher-level thinking.\n\n : AI agents can analyze trends and patterns in data, provide insights, and even\nsuggest actions, helping stakeholders make informed decisions based on factual\ndata rather than intuition alone.\n\n 3. Popular AI Agent Frameworks\nSeveral frameworks have emerged to facilitate the development of AI agents, each\nwith its own unique features and capabilities. Some of the most popular\nframeworks include:\n\n : A framework designed to streamline the development of AI agents through\nautomation of code generation.\n\n : Focuses on natural language processing and understanding, enabling agents to\ncomprehend user intentions better.\n\n : Provides tools for developers to create conversational agents that can\nnavigate complex interactions seamlessly.\n\n : Specializes in leveraging various APIs to ensure agents can access and\nutilize external data effectively.\n\n : Aimed at collaborative environments, CrewAI strengthens teamwork by\nfacilitating communication through AI-driven insights.\n\n : Combines memory-optimized architectures with generative capabilities,\nallowing for more personalized interactions with users.\n\nThese frameworks empower developers to build versatile and intelligent agents\nthat can engage users, perform advanced analytics, and execute various tasks\naligned with organizational goals.\n\n 4. AI Agents in Human Resources\nAI agents are revolutionizing HR practices by automating and optimizing key\nfunctions:\n\n : AI agents can screen resumes, schedule interviews, and even conduct initial\nassessments, thus accelerating the hiring process while minimizing biases.\n\n : AI systems analyze employee performance data and potential, helping\norganizations identify future leaders and plan appropriate training.\n\n : Chatbots powered by AI can facilitate feedback loops between employees and\nmanagement, promoting an open culture and addressing concerns promptly.\n\nAs AI continues to evolve, HR departments leveraging these agents can realize\nsubstantial improvements in both efficiency and employee satisfaction.\n\n 5. AI Agents in Finance\nThe finance sector is seeing extensive integration of AI agents that enhance\nfinancial practices:\n\n : Automated systems manage and monitor expenses, flagging anomalies and\noffering recommendations based on spending patterns.\n\n : AI models assess credit risk and uncover potential fraud by analyzing\ntransaction data and behavioral patterns.\n\n : AI agents provide stock predictions and analytics based on historical data\nand current market conditions, empowering investors with informative insights.\n\nThe incorporation of AI agents into finance is fostering a more responsive and\nrisk-aware financial landscape.\n\n 6. Market Trends and Investments\nThe growth of AI agents has attracted significant investment, especially amidst\nthe rising popularity of chatbots and generative AI technologies. Companies and\nentrepreneurs are eager to explore the potential of these systems, recognizing\ntheir ability to streamline operations and improve customer engagement.\n\nConversely, corporations like Microsoft are taking strides to integrate AI\nagents into their product offerings, with enhancements to their Copilot 365\napplications. This strategic move emphasizes the importance of AI literacy in\nthe modern workplace and indicates the stabilizing of AI agents as essential\nbusiness tools.\n\n 7. Future Predictions and Implications\nExperts predict that AI agents will transform essential aspects of work life. As\nwe look toward the future, several anticipated changes include:\n\n Enhanced integration of AI agents across all business functions, creating\ninterconnected systems that leverage data from various departmental silos for\ncomprehensive decision-making.\n\n Continued advancement of AI technologies, resulting in smarter, more adaptable\nagents capable of learning and evolving from user interactions.\n\n Increased regulatory scrutiny to ensure ethical use, especially concerning data\nprivacy and employee surveillance as AI agents become more prevalent.\n\nTo stay competitive and harness the full potential of AI agents, organizations\nmust remain vigilant about latest developments in AI technology and consider\ncontinuous learning and adaptation in their strategic planning.\n\nThe emergence of AI agents is undeniably reshaping the workplace landscape in\n2024. With their ability to automate tasks, enhance efficiency, and improve\ndecision-making, AI agents are critical in driving operational success.\nOrganizations must embrace and adapt to AI developments to thrive in an\nincreasingly digital business environment.\n\n```\n\n### Note on Consistency in Naming\n\nThe names you use in your YAML files ( and ) should match the method names in\nyour Python code. For example, you can reference the agent for specific tasks\nfrom file. This naming consistency allows CrewAI to automatically link your\nconfigurations with your code; otherwise, your task won‚Äôt recognize the\nreference properly.\n\nNote how we use the same name for the agent in the () file as the method name in\nthe () file.\n\n```\n\n   Summarize emails into a concise and clear summary\n\n   You will create a 5 bullet point summary of the report\n\n```\n\nNote how we use the same name for the agent in the () file as the method name in\nthe () file.\n\n```\n\n   Summarize the email into a 5 bullet point summary\n\n   A 5 bullet point summary of the email\n\n```\n\nUse the annotations to properly reference the agent and task in the file.\n\nHere are examples of how to use each annotation in your CrewAI project, and when\nyou should use them:\n\nUsed to define an agent in your crew. Use this when:\n\n  * You need to create a specialized AI agent with a specific role\n  * You want the agent to be automatically collected and managed by the crew\n  * You need to reuse the same agent configuration across multiple tasks\n\n```\n\n    goal\"Conduct thorough research on given topics\"\n    backstory\"Expert researcher with years of experience in data analysis\"\n\n```\n\nUsed to define a task that can be executed by agents. Use this when:\n\n  * You need to define a specific piece of work for an agent\n  * You want tasks to be automatically sequenced and managed\n  * You need to establish dependencies between different tasks\n\n```\n\n    description\"Research the latest developments in AI technology\"\n    expected_output\"A comprehensive report on AI advancements\"\n\n```\n\nUsed to define your crew configuration. Use this when:\n\n  * You want to automatically collect all @agent and @task definitions\n  * You need to specify how tasks should be processed (sequential or hierarchical)\n  * You want to set up crew-wide configurations\n\n```\n\n    agentsselfagents # Automatically collected from @agent methods\n    tasksselftasks  # Automatically collected from @task methods\n\n```\n\nUsed to create custom tools for your agents. Use this when:\n\n  * You need to give agents specific capabilities (like web search, data analysis)\n  * You want to encapsulate external API calls or complex operations\n  * You need to share functionality across multiple agents\n\n```\n\n    max_results Maximum number of results to \n\n  # Implement your search logic here\n\n```\n\nUsed to execute logic before the crew starts. Use this when:\n\n  * You need to validate or preprocess input data\n  * You want to set up resources or configurations before execution\n  * You need to perform any initialization logic\n\n```\n\n  \"\"\"Validate and preprocess inputs before the crew starts.\"\"\"\n\n    \n\n  \n\n```\n\nUsed to process results after the crew completes. Use this when:\n\n  * You need to format or transform the final output\n  * You want to perform cleanup operations\n  * You need to save or log the results in a specific way\n\n```\n\n  \"\"\"Process and format the results after the crew completes.\"\"\"\n\n  \n\n```\n\nUsed to handle events during crew execution. Use this when:\n\n  * You need to monitor task progress\n  * You want to log intermediate results\n  * You need to implement custom progress tracking or metrics\n\n```\n\n  \"\"\"Log task completion details for monitoring.\"\"\"\n\n```\n\nUsed to implement custom caching for task results. Use this when:\n\n  * You want to avoid redundant expensive operations\n  * You need to implement custom cache storage or expiration logic\n  * You want to persist results between runs\n\n```\n\n  \"\"\"Custom cache implementation for storing task results.\"\"\"\n\n  \n\n      # Check if cache is still valid (e.g., not expired)\n\n```\n\nThese decorators are part of the CrewAI framework and help organize your crew‚Äôs\nstructure by automatically collecting agents, tasks, and handling various\nlifecycle events. They should be used within a class decorated with .\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the\nlast run and replay from a specific one. To use this feature, run.\n\nReplace with the ID of the task you want to replay.\n\nIf you need to reset the memory of your crew before running it again, you can do\nso by calling the reset memory feature:\n\nThis will clear the crew‚Äôs memory, allowing for a fresh start.\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can\ndeploy your crew in a few clicks.\n\n[Get started with CrewAI Enterprise and deploy your crew in a production\nenvironment with just a few\nclicks.](https://docs.crewai.com/<http:/app.crewai.com>)[Join our open source\ncommunity to discuss ideas, share your projects, and connect with other CrewAI\ndevelopers.](https://docs.crewai.com/<https:/community.crewai.com>)\n\n  * [Build your first CrewAI Agent](https://docs.crewai.com/<#build-your-first-crewai-agent>)\n  * [Note on Consistency in Naming](https://docs.crewai.com/<#note-on-consistency-in-naming>)\n  * [Replay Tasks from Latest Crew Kickoff](https://docs.crewai.com/<#replay-tasks-from-latest-crew-kickoff>)\n\n---\n\n# Untitled Page\nURL: https://docs.crewai.com/concepts/agents\n\n* [Create Your Own Manager Agent](https://docs.crewai.com/concepts/</how-to/custom-manager-agent>)\n  * [Force Tool Output as Result](https://docs.crewai.com/concepts/</how-to/force-tool-output-as-result>)\n  * [Replay Tasks from Latest Crew Kickoff](https://docs.crewai.com/concepts/</how-to/replay-tasks-from-latest-crew-kickoff>)\n\nIn the CrewAI framework, an is an autonomous unit that can:\n\n  * Make decisions based on its role and goal\n  * Use tools to accomplish objectives\n  * Communicate and collaborate with other agents\n\nThink of an agent as a specialized team member with specific skills, expertise,\nand responsibilities. For example, a agent might excel at gathering and\nanalyzing information, while a agent might be better at creating content.\n\nDefines the agent‚Äôs function and expertise within the crew.  \n---  \nThe individual objective that guides the agent‚Äôs decision-making.  \nProvides context and personality to the agent, enriching interactions.  \nLanguage model that powers the agent. Defaults to the model specified in or\n‚Äúgpt-4‚Äù.  \nCapabilities or functions available to the agent. Defaults to an empty list.  \nLanguage model for tool calling, overrides crew‚Äôs LLM if specified.  \nMaximum iterations before the agent must provide its best answer. Default is 20.  \nMaximum requests per minute to avoid rate limits.  \nMaximum time (in seconds) for task execution.  \nWhether the agent should maintain memory of interactions. Default is True.  \nEnable detailed execution logs for debugging. Default is False.  \nAllow the agent to delegate tasks to other agents. Default is False.  \nFunction called after each agent step, overrides crew callback.  \nEnable caching for tool usage. Default is True.  \nCustom system prompt template for the agent.  \nCustom prompt template for the agent.  \nCustom response template for the agent.  \nEnable code execution for the agent. Default is False.  \nMaximum number of retries when an error occurs. Default is 2.  \nKeep messages under context window size by summarizing. Default is True.  \nMode for code execution: ‚Äòsafe‚Äô (using Docker) or ‚Äòunsafe‚Äô (direct). Default is\n‚Äòsafe‚Äô.  \nConfiguration for the embedder used by the agent.  \nKnowledge sources available to the agent.  \nWhether to use system prompt (for o1 model support). Default is True.  \nThere are two ways to create agents in CrewAI: using or defining them .\n\nUsing YAML configuration provides a cleaner, more maintainable way to define\nagents. We strongly recommend using this approach in your CrewAI projects.\n\nAfter creating your CrewAI project as outlined in the section, navigate to the\nfile and modify the template to match your requirements.\n\nVariables in your YAML files (like ) will be replaced with values from your\ninputs when running the crew:\n\nHere‚Äôs an example of how to configure agents using YAML:\n\n```\n\n  You're a seasoned researcher with a knack for uncovering the latest\n\n  developments in topic. Known for your ability to find the most relevant\n\n  information and present it in a clear and concise manner.\n\n  Create detailed reports based on topic data analysis and research findings\n\n  You're a meticulous analyst with a keen eye for detail. You're known for\n\n  your ability to turn complex data into clear and concise reports making\n\n  it easy for others to understand and act on the information you provide.\n\n```\n\nTo use this YAML configuration in your code, create a crew class that inherits\nfrom :\n\nThe names you use in your YAML files () should match the method names in your\nPython code.\n\nYou can create agents directly in code by instantiating the class. Here‚Äôs a\ncomprehensive example showing all available parameters:\n\n```\n\n# Create an agent with all available parameters\n\n  goal\"Analyze and interpret complex datasets to provide actionable insights\"\n\n  backstory\"With over 10 years of experience in data science and machine\nlearning, \"\n\n       \"you excel at finding patterns in complex datasets.\"\n  llm # Default: OPENAI_MODEL_NAME or \"gpt-4\"\n\n  function_calling_llm # Optional: Separate LLM for tool calling\n\n  max_rpm # Optional: Rate limit for API calls\n\n  max_execution_time # Optional: Maximum execution time in seconds\n\n  max_retry_limit # Default: 2 retries on error\n\n  code_execution_mode # Default: \"safe\" (options: \"safe\", \"unsafe\")\n\n  toolsSerperDevTool # Optional: List of tools\n\n  knowledge_sources # Optional: List of knowledge sources\n\n  embedder_config # Optional: Custom embedder configuration\n\n  system_template # Optional: Custom system prompt template\n\n  prompt_template # Optional: Custom prompt template\n\n  response_template # Optional: Custom response template\n\n  step_callback # Optional: Callback function for monitoring\n\n```\n\nLet‚Äôs break down some key parameter combinations for common use cases:\n\n```\n\n  goal\"Find and summarize information about specific topics\"\n\n  backstory\"You are an experienced researcher with attention to detail\"\n\n  verbose # Enable logging for debugging\n\n```\n\n```\n\n  goal\"Write and debug Python code\"\n\n  backstory\"Expert Python developer with 10 years of experience\"\n\n  code_execution_mode # Uses Docker for safety\n\n  max_retry_limit # More retries for complex code tasks\n\n```\n\n```\n\n  goal\"Perform deep analysis of large datasets\"\n\n  backstory\"Specialized in big data analysis and pattern recognition\"\n\n  function_calling_llm # Cheaper model for tool calls\n\n```\n\n```\n\n  goal\"Assist customers with their inquiries\"\n\n  backstory\"Experienced in customer support with a focus on satisfaction\"\n\n```\n\n  * , , and are required and shape the agent‚Äôs behavior\n  * determines the language model used (default: OpenAI‚Äôs GPT-4)\n\n  * : Enable to maintain conversation history\n  * : Prevents token limit issues\n  * : Add domain-specific knowledge bases\n\n  * : Maximum attempts before giving best answer\n  * : Rate limiting for API calls\n\n  * : Must be True to run code\n  * : \n    * : Uses Docker (recommended for production)\n    * : Direct execution (use only in trusted environments)\n\n  * : Defines agent‚Äôs core behavior\n\nWhen using custom templates, you can use variables like , , and in your\ntemplates. These will be automatically populated during execution.\n\nAgents can be equipped with various tools to enhance their capabilities. CrewAI\nsupports tools from:\n\nHere‚Äôs how to add tools to an agent:\n\n```\n\n# Add tools to agent\n\n  goal\"Research the latest AI developments\"\n\n```\n\nAgents can maintain memory of their interactions and use context from previous\ntasks. This is particularly useful for complex workflows where information needs\nto be retained across multiple tasks.\n\n```\n\n  goal\"Analyze and remember complex data patterns\"\n\n```\n\nWhen is enabled, the agent will maintain context across multiple interactions,\nimproving its ability to handle complex, multi-step tasks.\n\n## Important Considerations and Best Practices\n\n  * When using , be cautious with user input and always validate it\n  * Use (Docker) in production environments\n  * Consider setting appropriate limits to prevent infinite loops\n\n  * Use to prevent token limit issues\n  * Set appropriate to avoid rate limiting\n  * Enable to improve performance for repetitive tasks\n\n  * Use for tasks requiring historical context\n  * Configure when using custom embedding models\n  * Use custom templates (, , ) for fine-grained control over agent behavior\n\n  * Enable when agents need to work together\n  * Use to monitor and log agent interactions\n  * Consider using different LLMs for different purposes: \n\n  * Set for older models that don‚Äôt support system messages\n  * Ensure your chosen supports the features you need (like function calling)\n\n  1. : If you‚Äôre hitting API rate limits:\n     * Use caching for repetitive operations\n  2. : If you‚Äôre exceeding context limits:\n  3. : If code execution fails:\n     * Verify Docker is installed for safe mode\n  4. : If agent responses seem inconsistent:\n\nRemember that agents are most effective when configured according to their\nspecific use case. Take time to understand your requirements and adjust these\nparameters accordingly.\n\n  * [Important Considerations and Best Practices](https://docs.crewai.com/concepts/<#important-considerations-and-best-practices>)\n\n---\n\n# Untitled Page\nURL: https://docs.crewai.com/concepts/llamaindex-tools\n\n* [Create Your Own Manager Agent](https://docs.crewai.com/concepts/</how-to/custom-manager-agent>)\n  * [Force Tool Output as Result](https://docs.crewai.com/concepts/</how-to/force-tool-output-as-result>)\n  * [Replay Tasks from Latest Crew Kickoff](https://docs.crewai.com/concepts/</how-to/replay-tasks-from-latest-crew-kickoff>)\n\nCrewAI seamlessly integrates with LlamaIndex‚Äôs comprehensive toolkit for RAG\n(Retrieval-Augmented Generation) and agentic pipelines, enabling advanced\nsearch-based queries and more.\n\nHere are the available built-in tools offered by LlamaIndex.\n\n```\n\n# Example 1: Initialize from FunctionTool\n\n# Example 2: Initialize from LlamaHub Tools\n\n# Example 3: Initialize Tool from a LlamaIndex Query Engine\n\n  name\"Uber 2019 10K Query Tool\"\n\n  description\"Use this tool to lookup the 2019 Uber 10K Annual Report\"\n\n# Create and assign the tools to an agent\n\n  backstory'An expert analyst with a keen eye for market trends.'\n\n# rest of the code ...\n\n```\n\nTo effectively use the LlamaIndexTool, follow these steps:\n\nMake sure that package is installed in your Python environment:\n\nFollow the LlamaIndex documentation to set up a RAG/agent pipeline.\n\n---\n\n",
  "metadata": {
    "wordCount": 4081,
    "charCount": 29265,
    "timestamp": "2025-02-12T03:24:53.073Z"
  }
}